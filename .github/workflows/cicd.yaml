name: CI/CD pipeline for ec2

on:
  push:
    branches:
      - main

jobs:
  # build:
  #   name: build app on push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout to code
  #       uses: actions/checkout@v4
      
  #     - name: build docker image
  #       run: docker build -t ${{ secrets.DOCKER_USERNAME }}/simple-python-app:latest .

  #     - name: log in to docker
  #       run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

  #     - name: push image to docker hub
  #       run: docker push ${{ secrets.DOCKER_USERNAME }}/simple-python-app:latest

  #     - name: log out from docker
  #       run: docker logout

  # test:
  #   name: test the application
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: pull docker image
  #       run: docker pull ${{  secrets.DOCKER_USERNAME }}/simple-python-app:latest

  #     - name: run docker image to test
  #       run: docker run --rm ${{ secrets.DOCKER_USERNAME }}/simple-python-app:latest pytest tests.py

  deploy:
    name: deploy application on ec2 instance
    runs-on: ubuntu-latest
    # needs: test

    steps:
      - name: add private key(ssh key) to system
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: ssh to ec2 and perform deploy operation
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/simple-python-app:latest
          docker stop server || true
          docker rm server || true
          docker run -d -p 5000:5000 --name server ${{ secrets.DOCKER_USERNAME }}/simple-python-app:latest 
          EOF